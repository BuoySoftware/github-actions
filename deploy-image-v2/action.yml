name: Deploy image

inputs:
  application:
    description: Name of the application to be deployed.
    required: true
    type: string
  environment:
    description: Environment to deploy the image in
    required: true
    type: string
  image_repo:
    description: Repo of the image to be deployed
    required: true
    type: string
  image_tag:
    description: Tag of the image to be deployed
    required: true
    type: string
  manifests_repository:
    default: BuoySoftware/ArgoCD
    description: Repository of the Kubernetes manifests to be updated
    required: false
    type: string
  overlay_dirs:
    description: Directory of the kustomize manifests to be updated.
    required: true
    type: string
  personal_access_token:
    description: Personal access token generated for the manifests repository
    required: true
    type: string
  slack_webhook_url:
    description: Slack webhook URL for notifications
    required: false
    type: string
  working_directory:
    default: "."
    description: Desired working directory for the manifests repository
    required: false
    type: string

runs:
  using: "composite"

  steps:
    - name: Checkout Manifests Repo
      uses: actions/checkout@v3
      with:
        path: ${{ inputs.working_directory }}
        repository: ${{ inputs.manifests_repository }}
        token: ${{ inputs.personal_access_token }}

    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v2

    - name: "Update Deployment Image Tag"
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      env:
        OVERLAY_DIRS: ${{ inputs.overlay_dirs }}
        IMAGE_REPO: ${{ inputs.image_repo }}
        IMAGE_TAG: ${{ inputs.image_tag }}
      run: |
        overlays=$(echo $OVERLAY_DIRS | tr "," "\n")
        image="$IMAGE_REPO:$IMAGE_TAG"

        for overlay in $overlays
        do
          echo "Updating $overlay to $image..."
          (cd $overlay; kustomize edit set image $image)
          echo ""
        done

    - name: "Push Updated Image Tag"
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        git config --global user.name "buoysoftware-bot"
        git config --global user.email "buoysoftware-bot@users.noreply.github.com"
        if ! git diff --cached --quiet; then
          git commit -am "Update deployment image tag for ${{ inputs.application }}-${{ inputs.environment }} to ${{ inputs.image_tag }} [skip ci]"
          git pull --rebase --autostash
          git push
        else
          echo "No changes to commit."
        fi

    - name: Notify Slack on failure
      if: failure() && inputs.slack_webhook_url != ''
      uses: 8398a7/action-slack@v3
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
        AS_REF: ${{ github.ref }}
        AS_AUTHOR: ${{ github.actor }}
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            "attachments": [{
              "color": "danger",
              "mrkdwn_in": ["text"],
              "text": ":x: *Image deployment failed*\n*Ref:* ${{ env.AS_REF }}\n*Author:* ${{ env.AS_AUTHOR }}\n\nPlease check the CI job logs for details: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>"
            }]
          }
