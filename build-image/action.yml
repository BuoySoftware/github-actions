name: Build docker image

inputs:
  ecr_repository:
    description: ECR repo to push image
    required: false
    type: string
  aws_access_key_id:
    description: AWS ECR access key id
    required: true
    type: string
  aws_secret_access_key:
    description: AWS ECR secret access key
    required: true
    type: string
  build_args:
    description: Additional docker build args
    type: string

outputs:
  registry:
    description: "ECR registry for the image"
    value: ${{ steps.login-ecr.outputs.registry }}
  short_sha_tag: 
    description: "Short SHA tag assigned to the image"
    value: sha-${{ steps.current-git-sha.outputs.short }}

runs:
  using: "composite"

  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Read current git sha details
      id: current-git-sha
      shell: bash
      run: |
        echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "long=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Configure Amazon ECR Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      shell: bash
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ inputs.ecr_repository }}
        SHORT_SHA_TAG: sha-${{ steps.current-git-sha.outputs.short }}
        LONG_SHA_TAG: sha-${{ steps.current-git-sha.outputs.long }}
        BUILD_ARGS: ${{ inputs.build_args }}
      run: |
        echo "Checking if image $REGISTRY/$REPOSITORY:$SHORT_SHA_TAG already exist..."
        IMAGE_EXISTS=$(docker manifest inspect $REGISTRY/$REPOSITORY:$SHORT_SHA_TAG > /dev/null 2>&1 && echo yes || echo no)
        if [[  $IMAGE_EXISTS == "yes"  ]]; then
          echo "Image was found, skipping build."
        else
          echo "Image not found, building..."
          docker build . -t $REGISTRY/$REPOSITORY:$SHORT_SHA_TAG -t $REGISTRY/$REPOSITORY:$LONG_SHA_TAG $BUILD_ARGS
          docker push --all-tags $REGISTRY/$REPOSITORY
        fi
